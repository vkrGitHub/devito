sudo: false

language: python

env:
  global:
    # Doctr deploy key for devitocodes/devito
    - secure: "hAFf5Vc1VrgC8aotrgAlJuAE8V1BhShGXSmalLtgHQtTqAhndOXGB5erGnTtTcjayVT8EhapRpHKd9z2nxAg03ijKDMQSkC2UD4Cvby6oeSs7/MD7D84ogaI5gPEF8RCyoKz9spK8fM9Z4c4wxUZYDTn3sD/fwEaD1PMCMxeQ4X785PeoAcZi/u0AM6utGw5AaTdLll+KVSvJQJpq9pg7ICHNOCq9d7K3T4oFlto97MXP3clkju48Jl2lbXdM+oREuKyE5l4/mFNUtvBg3g1tXOTdOQnQhywYCM5AbCfdNa78nXFg9q7UmcKk42zLvFh8tWLJsvKCo+pTGGTZ5bmkg5oZXfAE/lTwcBdd9NxWYMjirj6z6v0UlHLpSvugtLobwf2p06yEb3G0HVCzLzPzTsIKA/8m67pCCbuSQIS7W7N35PBWudyi4xDQZr/jraDI6Z3WM+iH6eD3YeQ9YhJaTE5ivpiZ850hEPUD+hvontw8rRDt7kgsuoj5O5NBQtSC52JJBNAK0fS9BZC4M4lYBGpMAws40J/uZodS+0aY5mZXW2vT9vGQmmfyopsV0rf0qp4AHUQAaQ7nmtu4v7eoj+a0UohQKOjiN1CvLvdZRimOJtOWASdAxstIiOBBaGMn/SHuDerfZDmZbZlaQFEkjVw+5dqTFUnNKaHFZhYUqU="
    - DEVITO_LOGGING: "INFO"

matrix:
  include:
    - python: 3.6
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7
          packages:
            - gcc-4.9
            - g++-4.9
      env: DEVITO_ARCH=gcc-4.9 DEVITO_OPENMP=0 INSTALL_TYPE=pip_setup RUN_EXAMPLES=False MPI_INSTALL=1 MPI_RESTRAIN=1
    - python: 3.8
      dist: xenial
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7
          packages:
            - gcc-5
            - g++-5
      env: DEVITO_ARCH=gcc-5 DEVITO_OPENMP=0 RUN_EXAMPLES=False INSTALL_TYPE=conda MPI_INSTALL=0
    - python: 3.7
      dist: xenial
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7
          packages:
            - gcc-8
            - g++-8
      env: DEVITO_ARCH=gcc-8 DEVITO_OPENMP=1 OMP_NUM_THREADS=2 RUN_EXAMPLES=True INSTALL_TYPE=conda MPI_INSTALL=1 MPI_RESTRAIN=1
    - python: 3.7
      dist: xenial
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7
          packages:
            - gcc-7
            - g++-7
      env: DEVITO_ARCH=gcc-7 DEVITO_OPENMP=0 DEVITO_BACKEND=yask YC_CXX=g++-7 INSTALL_TYPE=conda RUN_EXAMPLES=False MPI_INSTALL=1
    - python: 3.7
      dist: xenial
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7
          packages:
            - gcc-7
            - g++-7
      env: DEVITO_ARCH=gcc-7 DEVITO_OPENMP=0 DEVITO_BACKEND=ops YC_CXX=g++-7 INSTALL_TYPE=conda RUN_EXAMPLES=False MPI_INSTALL=0

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test     # For gcc 4.9, 5 and 7

before_install:
  - if [[ "$MPI_INSTALL" == '1' ]]; then
      sudo apt-get install -y -q mpich libmpich-dev;
      export MPICH_CC=$DEVITO_ARCH;
    fi
  # Setup anaconda
  - if [[ $INSTALL_TYPE == 'conda' ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda info -a;
      export COV="--cov";
    fi

install:
  # Install devito with conda
  - if [[ $INSTALL_TYPE == 'conda' ]]; then
      sed -i -E 's/(python=)(.*)/\1'$TRAVIS_PYTHON_VERSION'/' environment.yml;
      conda env create -q -f environment.yml;
      source activate devito;
      conda update -q conda;
      pip install -e .;
      conda list;
    fi
  - if [[ "$MPI_INSTALL" == '1' ]]; then
      pip install -r requirements-optional.txt;
    fi

  # Install devito with pip
  - if [[ $INSTALL_TYPE == 'pip_setup' ]]; then python setup.py install; fi
  - if [[ $MPI_INSTALL == '1' ]]; then pip install -e .[extras]; fi

before_script:
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - if [[ $DEVITO_BACKEND == 'yask' ]]; then
      conda install swig; cd ../;
      git clone https://github.com/devitocodes/yask.git;
      cd yask; make compiler-api; pip install -e .; cd ../devito;
    fi

script:
  - flake8 --builtins=ArgumentError .
  # Run test with py.tests
  - if [[ $INSTALL_TYPE == 'pip_setup' ]]; then python setup.py test; fi
  - if [[ $INSTALL_TYPE == 'conda' ]]; then py.test --durations=20 --maxfail=5 $COV devito tests/; fi
  # Run remaining specialized examples and tests
  # Additional seismic operator tests
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python benchmarks/user/benchmark.py test -P tti -so 4 -d 20 20 20 -n 5; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python benchmarks/user/benchmark.py test -P acoustic; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/seismic/acoustic/acoustic_example.py --full; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/seismic/acoustic/acoustic_example.py --full --checkpointing; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/seismic/acoustic/acoustic_example.py --constant --full; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/misc/linalg.py mat-vec mat-mat-sum transpose-mat-vec; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/seismic/tti/tti_example.py -a basic; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/seismic/tti/tti_example.py -a basic --noazimuth; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then python examples/cfd/example_diffusion.py; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test examples/cfd/example_diffusion.py; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test examples/seismic/elastic/elastic_example.py; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test examples/seismic/viscoelastic/viscoelastic_example.py; fi
  # Test tutorial notebooks for the website using nbval
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test --nbval examples/cfd; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test --nbval examples/seismic/tutorials; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test --nbval examples/compiler; fi
  - if [[ $RUN_EXAMPLES == 'True' ]]; then py.test --nbval examples/userapi; fi
  # Code coverage and documentation generation
  - if [[ $INSTALL_TYPE == 'conda' ]]; then
      codecov;
      cd docs;
      make html;
      cd ..;
    fi
  # Docs deployment only once from a single build
  - if [[ $DEVITO_ARCH == 'gcc-5' ]]; then
          set -e;
          pip install doctr;
          doctr deploy . --built-docs docs/_build/html --key-path .deploy_key.enc;
    fi
